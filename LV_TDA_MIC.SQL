SELECT 
	STL.LGCY_BUSN_LCAT_ID_NU AS STORE_NUMBER,
	CASE
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 500 AND 1029 THEN 1
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 1030 AND 1359 THEN 2
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 1400 AND 1659 THEN 3
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 1700 AND 1959 THEN 4
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 2000 AND 2359 THEN 5
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 0000 AND 0459 THEN 6
		ELSE 0 END AS DYPT_ID_NU, /* ID number for Daypart, that matches UK needs. Any filtering in MSTR done on Daypart would be quicker for analytical engine (hence for end users) with numerical ID. */
	CASE
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 500 AND 1029 THEN 'Breakfast'
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 1030 AND 1359 THEN 'Lunch'
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 1400 AND 1659 THEN 'Afternoon'
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 1700 AND 1959 THEN 'Dinner'
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 2000 AND 2359 THEN 'Evening'
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 0 AND 459 THEN 'Night'
		ELSE '0' END AS DYPT_DS, /* please notice than not only naming is different but also timing of 'Breakfast' and 'Lunch'. With a need to hard code some rows, I decided it would be better to hard code the rest as allowed to remove one join to daypart lookup. */
	CASE
		WHEN TO_CHAR(HDR.POS_ORD_BEG_TM, 'HH24MI') :: INTEGER BETWEEN 0 AND 359 THEN HDR.POS_ORD_DT-1
		ELSE HDR.POS_ORD_DT END AS POS_BUSN_DT_UK, /* UK Business Date definition */
	REGEXP_replace(HDR.POS_DVCE_ID, '[[:alpha:]]') :: INTEGER AS POS_DVCE_ID,
	HDR.POS_HOLD_TM_SC_QT,
	(DTL.POS_KEY_NET_PRC_AM*DTL.POS_ITM_TOT_QT) AS POS_ITM_NET_AM,
	DTL.POS_ITM_NET_UNT_PRC_AM,
	DTL.POS_ITM_TOT_QT,
	DTL.POS_ITM_UNT_FOOD_COST_AM,
	DTL.POS_ITM_UNT_PAPR_COST_AM,
	DTL.HR_ID_NU AS HOURNUM24,
	CAST('1900-01-01' || ' ' || SPLIT_PART((DATE_TRUNC('hour', HDR.POS_ORD_BEG_TM) + DATE_PART(MIN, HDR.POS_ORD_BEG_TM) :: INTEGER / 15 * INTERVAL '15 min'),' ',2) :: CHAR(8) AS TIMESTAMP) AS POS_ORD_BEG_TS_15M, /* round timestamps to 15 minutes and remove date sensitivity to enable in memory pivoting on 15 min chunks for different dates */
	HDR.POS_ORD_DT,
	DTL.POS_ORD_KEY_ID AS POS_TRN_ID,
	HDR.POS_ORD_NU,
	DTL.POS_TRN_ITM_LN_SEQ_NU AS POS_TRN_ITM_SEQ_NU,
	DTL.SLD_MENU_ITM_ID,
	CASE
		WHEN HDR.POS_DVCE_ID = 'POS0063' THEN '100'
	ELSE HDR.TERR_POS_AREA_CD END AS TERR_POS_AREA_CD,
	CASE 
		WHEN HDR.POS_DVCE_ID = 'POS0063' THEN 'MOBILE'
		WHEN HDR.TERR_POS_AREA_CD = 1 THEN 'FRONT COUNTER'
		WHEN HDR.TERR_POS_AREA_CD = 2 THEN 'DRIVE THRU'
		WHEN HDR.TERR_POS_AREA_CD = 4 THEN 'WALK THRU'
		WHEN HDR.TERR_POS_AREA_CD = 8 THEN 'DELIVERY'
		WHEN HDR.TERR_POS_AREA_CD = 90 THEN 'KIOSK'
	ELSE 'UNKNOWN CODE' END AS TERR_POS_AREA_DS, -- custom UK names
	HDR.POS_TRN_KIND_TYP_ID :: CHAR(1) AS TERR_POS_TRN_TYP_CD, /*remove conversion before republishing ALL cubes with it. Can't be done for one as blending would not work */
	HDR.POS_TRN_KIND_TYP_ID AS POS_TRN_TYP_ID, /* remove from cube before republish */
	DECODE(HDR.POS_TRN_KIND_TYP_ID,1,'Sale',2,'Refund') AS TERR_POS_TRN_TYP_DS,
	HDR.TERR_PRD_DLVR_METH_CD,
	DECODE(HDR.TERR_PRD_DLVR_METH_CD,1,'Eat In',0,'Take Out','Other') AS TERR_PRD_DLVR_METH_DS,
	CASE
		WHEN HDR.TERR_PYMT_METH_CD IN(0,1,2) THEN '1' /* don't use between or < as it's a varchar and will include 15! */
		WHEN HDR.TERR_PYMT_METH_CD IN(5,21,22,23,24) THEN '2'
		WHEN HDR.TERR_PYMT_METH_CD = 6 THEN '3'
		WHEN HDR.TERR_PYMT_METH_CD = 15 THEN '4'
		WHEN HDR.TERR_PYMT_METH_CD = 7 THEN '5'
	ELSE HDR.TERR_PYMT_METH_CD END AS PYMT_METH_TYP_ID, -- ID for 'Payment Method' dimension
	CASE
		WHEN HDR.TERR_PYMT_METH_CD IN(0,1,2) THEN 'Cash' /* don't use between or < as it's a varchar and will include 15! */
		WHEN HDR.TERR_PYMT_METH_CD IN(5,21,22,23,24) THEN 'Cashless'
		WHEN HDR.TERR_PYMT_METH_CD = 6 THEN 'Luncheon Voucher'
		WHEN HDR.TERR_PYMT_METH_CD = 15 THEN '£5 Voucher'
		WHEN HDR.TERR_PYMT_METH_CD = 7 THEN 'Cheque'
	ELSE 'UNKNOWN CODE' END AS PYMT_METH_TYP_DS -- description for 'Payment Method' dimension
FROM PROD_TABLES.POS_TRN_LVL_DTL DTL JOIN PROD_TABLES.POS_TRN_LVL_HDR HDR ON  DTL.TERR_CD = HDR.TERR_CD
 AND DTL.MCD_GBAL_LCAT_ID_NU = HDR.MCD_GBAL_LCAT_ID_NU
 AND DTL.POS_ORD_KEY_ID = HDR.POS_ORD_KEY_ID
 AND DTL.POS_BUSN_DT = HDR.POS_BUSN_DT
 AND DTL.POS_EVNT_TYP_ID = HDR.POS_EVNT_TYP_ID
	JOIN PROD_TABLES.MCD_GBAL_BUSN_LCAT STL ON (HDR.MCD_GBAL_LCAT_ID_NU = STL.MCD_GBAL_LCAT_ID_NU)
WHERE DTL.SLD_MENU_ITM_ID < 10000